# =============================================================================
# Valid Names - Environment Variables
# =============================================================================
# Copy this file to .env and fill in your actual values
# cp .env.example .env

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL Database URL (REQUIRED)
# Format: postgresql://username:password@host:port/database
# Examples:
# - Local: postgresql://username:password@localhost:5432/validnames
# - Neon: postgresql://username:password@ep-xxx-xxx-xxx.region.aws.neon.tech/neondb
# - Supabase: postgresql://postgres:[password]@db.[project-ref].supabase.co:5432/postgres
DATABASE_URL="postgresql://username:password@localhost:5432/validnames"

# =============================================================================
# Authentication & Security
# =============================================================================

# JWT Secret Key (REQUIRED - Change this in production!)
# Generate a secure random string for production
# You can generate one with: openssl rand -base64 32
JWT_SECRET="your-super-secret-jwt-key-change-this-in-production"

# =============================================================================
# Application Configuration
# =============================================================================

# Node Environment
# Options: development, production, test
# This is automatically set by your deployment platform
NODE_ENV="development"

# =============================================================================
# Notes:
# =============================================================================
# 1. Never commit your actual .env file to version control
# 2. Use strong, unique passwords for database connections
# 3. Generate a secure JWT_SECRET for production
# 4. Update NODE_ENV to "production" when deploying
# 5. Ensure DATABASE_URL is properly formatted for your database provider
#
# Optional: If you want to customize session duration, you can modify
# the hardcoded value in src/app/api/auth/authOperations.ts (currently 24 hours) 